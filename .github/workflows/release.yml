name: Build Fluent Bit

on:
  release:
    types: [ created ]

jobs:
  build-fluentbit:
    runs-on: ubuntu-22.04
    # Only create releases on actual release creation, not on PRs
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          make \
          tar \
          libssl-dev \
          libsasl2-dev \
          pkg-config \
          libsystemd-dev \
          zlib1g-dev \
          libpq-dev \
          flex \
          bison \
          libyaml-dev

    - name: Clone Fluent Bit repository
      run: |
        git clone https://github.com/fluent/fluent-bit.git
        cd fluent-bit
        git submodule update --init --recursive

    - name: Get Fluent Bit commit info
      id: fluentbit_info
      run: |
        cd fluent-bit
        FLUENTBIT_SHA=$(git rev-parse --short HEAD)
        FLUENTBIT_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "unknown")
        echo "sha=${FLUENTBIT_SHA}" >> $GITHUB_OUTPUT
        echo "version=${FLUENTBIT_VERSION}" >> $GITHUB_OUTPUT

    - name: Get release version from tag
      id: release_version
      run: |
        # Use the tag that triggered this release
        RELEASE_TAG="${{ github.event.release.tag_name }}"
        echo "Release tag: $RELEASE_TAG"
        echo "version=${RELEASE_TAG}" >> $GITHUB_OUTPUT

    - name: Configure build
      run: |
        cd fluent-bit
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release \
              -DFLB_RELEASE=On \
              -DFLB_TRACE=Off \
              -DFLB_JEMALLOC=On \
              -DFLB_TLS=On \
              -DFLB_SHARED_LIB=Off \
              -DFLB_EXAMPLES=Off \
              -DFLB_HTTP_SERVER=On \
              ..

    - name: Build Fluent Bit
      run: |
        cd fluent-bit/build
        make -j$(nproc)

    - name: Create build artifacts
      run: |
        cd fluent-bit/build
        mkdir -p artifacts
        cp bin/fluent-bit artifacts/
        # Include version info in artifact name
        tar -czf fluent-bit-${{ steps.release_version.outputs.version }}.tar.gz -C artifacts .

    - name: Display build info
      run: |
        cd fluent-bit/build
        echo "Build completed successfully!"
        echo "Fluent Bit version: ${{ steps.fluentbit_info.outputs.version }}"
        echo "Fluent Bit commit: ${{ steps.fluentbit_info.outputs.sha }}"
        echo "Release version: ${{ steps.release_version.outputs.version }}"
        echo "Fluent Bit binary info:"
        ./bin/fluent-bit --version
        echo "Binary size:"
        ls -lh bin/fluent-bit

    - name: Upload build artifacts to release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.release_version.outputs.version }}
        name: "Fluent Bit Build ${{ steps.release_version.outputs.version }} (fb-${{ steps.fluentbit_info.outputs.sha }})"
        body: |
          Automated build of Fluent Bit
          
          **Build Details:**
          - Fluent Bit Version: ${{ steps.fluentbit_info.outputs.version }}
          - Fluent Bit Commit: `${{ steps.fluentbit_info.outputs.sha }}`
          - Build Date: ${{ github.event.release.created_at }}
          - Workflow Run: [${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          
          **Download:**
          The compiled Fluent Bit binary is attached as `fluent-bit-${{ steps.release_version.outputs.version }}.tar.gz`
        files: fluent-bit/build/fluent-bit-${{ steps.release_version.outputs.version }}.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
